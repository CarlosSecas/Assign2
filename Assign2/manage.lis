     1                                  ;****************************************************************************************************************************
     2                                  ;Program name: "Arrays of floating point numbers".  This program takes floating point number inputs from the user and puts them in an array. The array values are then printed, along with the variance of the numbers.
     3                                  ; Copyright (C) 2024  Carlos Secas .          *
     4                                  ;                                                                                                                           *
     5                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     6                                  ;version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it will be useful,   *
     7                                  ;but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See   *
     8                                  ;the GNU General Public License for more details A copy of the GNU General Public License v3 is available here:             *
     9                                  ;<https://www.gnu.org/licenses/>.                                                                                           *
    10                                  ;****************************************************************************************************************************
    11                                  
    12                                  
    13                                  
    14                                  
    15                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    16                                  ;Author information
    17                                  ;  Author name: Carlos Secas
    18                                  ;  Author email: carlosJsecas@csu.fullerton.edu
    19                                  ;  CWID: 886088269
    20                                  ;  Class: 240-09 Section 09
    21                                  ;
    22                                  ;Program information
    23                                  ;  Program name: Arrays of floating point numbers
    24                                  ;  Programming languages: one module in C, six in x86, one in C++, and one in bash
    25                                  ;  Date program began: 2025-Feb-12
    26                                  ;  Date of last update: 2025-Feb-19
    27                                  ;  Files in this program: main.cpp, manager.asm, input_array.asm, output_array.asm, isfloat.asm, sum.asm, swap.asm, sort.c, r.sh.
    28                                  ;  Testing: Alpha testing completed.  All functions are correct.
    29                                  ;  Status: Ready for release to customers
    30                                  ;
    31                                  ;Purpose
    32                                  ;  This program takes floating point number inputs from the user and puts them in an array. The array
    33                                  ;  values are then printed, along with the variance of the numbers.
    34                                  ;
    35                                  ;This file:
    36                                  ;  File name: manager.asm
    37                                  ;  Language: X86-64
    38                                  ;  Max page width: 124 columns
    39                                  ;  Assemble (standard): nasm -f elf64 -l manage.lis -o manage.o manager.asm
    40                                  ;  Assemble (debug): nasm -f elf64 -gdwarf -l manage.lis -o manage.o manager.asm
    41                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    42                                  ;  Prototype of this function: extern double manager();
    43                                  ; 
    44                                  ;
    45                                  ;
    46                                  ;
    47                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    48                                  
    49                                  ;declarations
    50                                  
    51                                  extern input_array
    52                                  
    53                                  extern sum
    54                                  
    55                                  extern sort
    56                                  
    57                                  extern output_array
    58                                  
    59                                  extern printf
    60                                  
    61                                  global manager
    62                                  
    63                                  segment .data                 ;Place initialized data here
    64 00000000 546869732070726F67-     program_msg db "This program will manage your arrays of 64-bit floats.", 10,0
    64 00000009 72616D2077696C6C20-
    64 00000012 6D616E61676520796F-
    64 0000001B 757220617272617973-
    64 00000024 206F662036342D6269-
    64 0000002D 7420666C6F6174732E-
    64 00000036 0A00               
    65                                  
    66                                  segment .bss      ;Declare pointers to un-initialized space in this segment.
    67                                  align 64
    68 00000000 <res 340h>              backup_storage_area resb 832
    69                                  
    70 00000340 <res 60h>               my_array resq 12 ; <name> <data-type> <size>
    71                                  
    72                                  
    73                                  segment .text
    74                                  manager:
    75                                  
    76                                  ;backup GPRs
    77 00000000 55                      push rbp
    78 00000001 4889E5                  mov rbp, rsp
    79 00000004 53                      push rbx
    80 00000005 51                      push rcx
    81 00000006 52                      push rdx
    82 00000007 57                      push rdi
    83 00000008 56                      push rsi
    84 00000009 4150                    push r8
    85 0000000B 4151                    push r9
    86 0000000D 4152                    push r10
    87 0000000F 4153                    push r11
    88 00000011 4154                    push r12
    89 00000013 4155                    push r13
    90 00000015 4156                    push r14
    91 00000017 4157                    push r15
    92 00000019 9C                      pushf
    93                                  
    94                                  ;backup other registers
    95 0000001A B807000000              mov rax,7
    96 0000001F BA00000000              mov rdx,0
    97 00000024 0FAE2425[00000000]      xsave [backup_storage_area]
    98                                  
    99                                  
   100                                  ;Print the purpose of the program
   101 0000002C B800000000              mov rax, 0
   102 00000031 48BF-                   mov rdi, program_msg
   102 00000033 [0000000000000000] 
   103 0000003B E8(00000000)            call printf
   104                                  
   105                                  ;Restore the GPRs
   106 00000040 9D                      popf
   107 00000041 415F                    pop r15
   108 00000043 415E                    pop r14
   109 00000045 415D                    pop r13
   110 00000047 415C                    pop r12
   111 00000049 415B                    pop r11
   112 0000004B 415A                    pop r10
   113 0000004D 4159                    pop r9
   114 0000004F 4158                    pop r8
   115 00000051 5E                      pop rsi
   116 00000052 5F                      pop rdi
   117 00000053 5A                      pop rdx
   118 00000054 59                      pop rcx
   119 00000055 5B                      pop rbx
   120 00000056 5D                      pop rbp   ;Restore rbp to the base of the activation record of the caller program
   121 00000057 C3                      ret
   122                                  ;End of the function manager ====================================================================
